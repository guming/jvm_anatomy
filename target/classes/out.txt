 num     #instances         #bytes  class name (module)
-------------------------------------------------------
   1:      15312408      244998528  java.lang.Object (java.base@11)
   2:           623      175431512  [Ljava.lang.Object; (java.base@11)
   3:           540        5447312  [I (java.base@11)
   4:          3293         180440  [B (java.base@11)
   5:           751          91712  java.lang.Class (java.base@11)
   6:          3207          76968  java.lang.String (java.base@11)
   7:          1851          59232  java.util.HashMap$Node (java.base@11)
   8:           355          36448  [Ljava.util.HashMap$Node; (java.base@11)
   9:          1093          34976  java.util.concurrent.ConcurrentHashMap$Node (java.base@11)
  10:            10          33648  [C (java.base@11)
  11:           371          17808  java.util.HashMap (java.base@11)
  12:            24          14976  [Ljava.util.concurrent.ConcurrentHashMap$Node; (java.base@11)
  13:           389           9336  java.lang.module.ModuleDescriptor$Exports (java.base@11)
  14:           254           6096  java.util.ImmutableCollections$Set12 (java.base@11)
  15:           185           5920  java.lang.module.ModuleDescriptor$Requires (java.base@11)
  16:            70           5600  java.net.URI (java.base@11)
  17:            12           4512  java.lang.Thread (java.base@11)
  18:            70           4480  java.lang.module.ModuleDescriptor (java.base@11)
  19:            67           4288  java.net.URL (java.base@11)
  20:           262           4192  java.lang.Integer (java.base@11)
  21:           248           3968  java.util.HashSet (java.base@11)
  22:            70           3920  jdk.internal.module.ModuleReferenceImpl (java.base@11)
  23:           161           3864  java.util.ImmutableCollections$SetN (java.base@11)
  24:            66           3696  java.lang.Module (java.base@11)
  25:            76           3648  java.lang.invoke.MemberName (java.base@11)
  26:            75           3000  java.lang.invoke.MethodType (java.base@11)
  27:            44           2992  [Ljava.lang.ref.SoftReference; (java.base@11)
  28:            92           2944  java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry (java.base@11)
  29:            90           2880  java.lang.invoke.LambdaForm$Name (java.base@11)
  30:            12           2520  [Ljava.lang.invoke.MethodHandle; (java.base@11)
  31:            96           2488  [Ljava.lang.Class; (java.base@11)
  32:            38           2432  java.util.concurrent.ConcurrentHashMap (java.base@11)
  33:            66           2112  java.lang.invoke.LambdaForm$Kind (java.base@11)
  34:           128           2048  java.util.Collections$UnmodifiableSet (java.base@11)
  35:            40           1920  sun.util.locale.LocaleObjectCache$CacheEntry (java.base@11)
  36:            70           1680  java.lang.invoke.ResolvedMethodName (java.base@11)
  37:            70           1680  jdk.internal.module.SystemModuleFinders$2 (java.base@11)
  38:            19           1672  java.lang.reflect.Method (java.base@11)
  39:            66           1584  java.lang.module.ModuleDescriptor$Provides (java.base@11)
  40:            39           1560  java.lang.ref.SoftReference (java.base@11)
  41:            61           1464  jdk.internal.module.ServicesCatalog$ServiceProvider (java.base@11)
  42:            60           1440  java.lang.module.ResolvedModule (java.base@11)
  43:            59           1416  java.util.ImmutableCollections$List12 (java.base@11)
  44:            59           1416  jdk.internal.loader.BuiltinClassLoader$LoadedModule (java.base@11)
  45:            25           1400  java.lang.invoke.MethodTypeForm (java.base@11)
  46:            16           1280  java.lang.reflect.Constructor (java.base@11)
  47:            18           1152  java.lang.Class$ReflectionData (java.base@11)
  48:             5           1104  [J (java.base@11)
  49:            33           1056  com.intellij.rt.debugger.agent.CaptureAgent$InstrumentPoint
  50:             1           1040  [Ljava.lang.Integer; (java.base@11)
  51:            65           1040  jdk.internal.module.SystemModuleFinders$3 (java.base@11)
  52:            25           1016  [Ljava.lang.invoke.LambdaForm$Name; (java.base@11)
  53:            63           1008  java.util.HashMap$KeySet (java.base@11)
  54:            20            960  java.lang.invoke.LambdaForm (java.base@11)
  55:            30            960  java.lang.invoke.LambdaForm$NamedFunction (java.base@11)
  56:            22            880  java.io.ObjectStreamField (java.base@11)
  57:            31            744  java.util.concurrent.CopyOnWriteArrayList (java.base@11)
  58:            30            720  java.util.ArrayList (java.base@11)
  59:            20            640  java.util.Locale (java.base@11)
  60:            20            640  sun.util.locale.BaseLocale (java.base@11)
  61:            20            640  sun.util.locale.BaseLocale$Key (java.base@11)
  62:             3            624  [Ljava.lang.invoke.LambdaForm; (java.base@11)
  63:            15            600  java.security.AccessControlContext (java.base@11)
  64:            16            504  [Ljava.lang.String; (java.base@11)
  65:             7            496  [Lsun.invoke.util.Wrapper; (java.base@11)
  66:            15            480  java.lang.invoke.DirectMethodHandle (java.base@11)
  67:            10            480  sun.invoke.util.Wrapper (java.base@11)
  68:            10            400  java.lang.OutOfMemoryError (java.base@11)
  69:            10            400  java.util.LinkedHashMap$Entry (java.base@11)
  70:            12            384  java.lang.invoke.BoundMethodHandle$Species_L (java.base@11)
  71:             1            384  java.lang.ref.Finalizer$FinalizerThread (java.base@11)
  72:            12            384  java.lang.ref.ReferenceQueue (java.base@11)
  73:             1            384  jdk.internal.misc.InnocuousThread (java.base@11)
  74:             1            376  java.lang.ref.Reference$ReferenceHandler (java.base@11)
  75:            14            336  [Ljava.lang.reflect.Constructor; (java.base@11)
  76:             5            336  [S (java.base@11)
  77:            14            336  jdk.internal.reflect.NativeConstructorAccessorImpl (java.base@11)
  78:            18            288  java.util.ImmutableCollections$ListN (java.base@11)
  79:             9            288  jdk.internal.org.objectweb.asm.Type (java.base@11)
  80:             9            288  org.jetbrains.capture.org.objectweb.asm.Type
  81:             1            280  [Ljava.lang.invoke.LambdaForm$Kind; (java.base@11)
  82:            11            264  java.lang.invoke.MethodHandleImpl$Intrinsic (java.base@11)
  83:             5            256  [Ljava.util.Hashtable$Entry; (java.base@11)
  84:             8            256  java.util.Hashtable$Entry (java.base@11)
  85:             9            248  [Ljava.io.ObjectStreamField; (java.base@11)
  86:            10            240  java.io.ExpiringCache$Entry (java.base@11)
  87:            10            240  java.nio.charset.CoderResult (java.base@11)
  88:            10            240  java.nio.file.StandardOpenOption (java.base@11)
  89:             5            240  java.util.Hashtable (java.base@11)
  90:             5            224  [Ljava.lang.invoke.LambdaForm$NamedFunction; (java.base@11)
  91:            14            224  java.lang.ref.ReferenceQueue$Lock (java.base@11)
  92:            14            224  jdk.internal.reflect.DelegatingConstructorAccessorImpl (java.base@11)
  93:             5            200  java.security.ProtectionDomain (java.base@11)
  94:             5            200  java.util.EnumMap (java.base@11)
  95:             5            200  java.util.WeakHashMap$Entry (java.base@11)
  96:             5            200  java.util.stream.StreamOpFlag (java.base@11)
  97:             6            192  java.lang.invoke.LambdaForm$BasicType (java.base@11)
  98:             6            192  sun.nio.fs.UnixPath (java.base@11)
  99:             2            160  [Ljava.util.WeakHashMap$Entry; (java.base@11)
 100:             4            160  java.security.CodeSource (java.base@11)
 101:             5            160  java.util.RegularEnumSet (java.base@11)
 102:             4            144  [Ljava.lang.reflect.Method; (java.base@11)
 103:             3            144  java.lang.ThreadGroup (java.base@11)
 104:             3            144  sun.nio.cs.UTF_8$Encoder (java.base@11)
 105:             2            128  java.io.ExpiringCache$1 (java.base@11)
 106:             3            120  [Ljava.lang.invoke.LambdaForm$BasicType; (java.base@11)
 107:             3            120  java.io.FileDescriptor (java.base@11)
 108:             5            120  java.util.stream.StreamOpFlag$Type (java.base@11)
 109:             1            120  jdk.internal.loader.ClassLoaders$AppClassLoader (java.base@11)
 110:             2            112  [Ljava.lang.invoke.MethodType; (java.base@11)
 111:             2            112  java.util.Properties (java.base@11)
 112:             1            112  jdk.internal.loader.ClassLoaders$BootClassLoader (java.base@11)
 113:             1            112  jdk.internal.loader.ClassLoaders$PlatformClassLoader (java.base@11)
 114:             3             96  [Ljava.lang.Thread; (java.base@11)
 115:             3             96  java.lang.ThreadLocal$ThreadLocalMap$Entry (java.base@11)
 116:             2             96  java.lang.invoke.BoundMethodHandle$SpeciesData (java.base@11)
 117:             3             96  java.lang.invoke.SimpleMethodHandle (java.base@11)
 118:             4             96  java.lang.module.ModuleDescriptor$Modifier (java.base@11)
 119:             4             96  java.lang.module.ModuleDescriptor$Opens (java.base@11)
 120:             4             96  java.lang.module.ModuleDescriptor$Requires$Modifier (java.base@11)
 121:             2             96  java.nio.HeapByteBuffer (java.base@11)
 122:             3             96  java.util.Collections$UnmodifiableMap (java.base@11)
 123:             3             96  java.util.ImmutableCollections$MapN (java.base@11)
 124:             3             96  java.util.Vector (java.base@11)
 125:             2             96  java.util.WeakHashMap (java.base@11)
 126:             4             96  java.util.stream.StreamShape (java.base@11)
 127:             2             96  sun.nio.cs.StreamEncoder (java.base@11)
 128:             1             80  [Ljava.lang.ThreadLocal$ThreadLocalMap$Entry; (java.base@11)
 129:             2             80  [Ljava.lang.invoke.BoundMethodHandle$SpeciesData; (java.base@11)
 130:             5             80  [Ljava.security.Principal; (java.base@11)
 131:             2             80  [Ljava.util.stream.StreamOpFlag$Type; (java.base@11)
 132:             2             80  java.io.BufferedWriter (java.base@11)
 133:             2             80  java.io.ExpiringCache (java.base@11)
 134:             2             80  java.io.FileOutputStream (java.base@11)
 135:             2             80  java.io.PrintStream (java.base@11)
 136:             2             80  java.lang.ClassLoader$NativeLibrary (java.base@11)
 137:             2             80  java.lang.ModuleLayer (java.base@11)
 138:             5             80  java.lang.ThreadLocal (java.base@11)
 139:             2             80  java.lang.VirtualMachineError (java.base@11)
 140:             2             80  java.lang.invoke.DirectMethodHandle$Constructor (java.base@11)
 141:             2             80  java.lang.module.Configuration (java.base@11)
 142:             5             80  java.security.ProtectionDomain$Key (java.base@11)
 143:             2             80  jdk.internal.loader.URLClassPath (java.base@11)
 144:             3             72  java.lang.WeakPairMap (java.base@11)
 145:             3             72  java.lang.invoke.Invokers (java.base@11)
 146:             3             72  java.util.ArrayDeque (java.base@11)
 147:             3             72  java.util.stream.Collector$Characteristics (java.base@11)
 148:             3             72  jdk.internal.misc.Signal (java.base@11)
 149:             3             72  jdk.internal.module.IllegalAccessLogger$Mode (java.base@11)
 150:             3             72  jdk.internal.reflect.NativeMethodAccessorImpl (java.base@11)
 151:             1             64  [Ljava.lang.invoke.MethodHandleImpl$Intrinsic; (java.base@11)
 152:             2             64  [Ljava.nio.charset.CoderResult; (java.base@11)
 153:             2             64  [Ljava.util.stream.Collector$Characteristics; (java.base@11)
 154:             2             64  java.io.BufferedOutputStream (java.base@11)
 155:             2             64  java.lang.ref.ReferenceQueue$Null (java.base@11)
 156:             2             64  java.util.stream.FindOps$FindOp (java.base@11)
 157:             1             56  [Ljava.nio.file.StandardOpenOption; (java.base@11)
 158:             1             56  [[I (java.base@11)
 159:             1             56  java.lang.invoke.BoundMethodHandle$Specializer (java.base@11)
 160:             1             56  java.lang.invoke.LambdaFormEditor$Transform (java.base@11)
 161:             1             56  jdk.internal.ref.CleanerImpl$SoftCleanableRef (java.base@11)
 162:             2             48  java.io.File$PathStatus (java.base@11)
 163:             2             48  java.io.OutputStreamWriter (java.base@11)
 164:             1             48  java.lang.invoke.BoundMethodHandle$Specializer$Factory (java.base@11)
 165:             2             48  java.lang.invoke.MethodHandles$Lookup (java.base@11)
 166:             3             48  java.nio.charset.CodingErrorAction (java.base@11)
 167:             3             48  java.util.concurrent.atomic.AtomicInteger (java.base@11)
 168:             2             48  jdk.internal.misc.Signal$NativeHandler (java.base@11)
 169:             1             48  jdk.internal.ref.CleanerImpl$PhantomCleanableRef (java.base@11)
 170:             1             48  jdk.internal.ref.CleanerImpl$WeakCleanableRef (java.base@11)
 171:             3             48  jdk.internal.reflect.DelegatingMethodAccessorImpl (java.base@11)
 172:             2             48  sun.instrument.TransformerManager (java.instrument@11)
 173:             1             40  [Ljava.util.stream.StreamOpFlag; (java.base@11)
 174:             2             40  [Lsun.instrument.TransformerManager$TransformerInfo; (java.instrument@11)
 175:             1             40  [[Ljava.lang.invoke.LambdaForm$Name; (java.base@11)
 176:             1             40  java.io.BufferedInputStream (java.base@11)
 177:             1             40  java.io.FileInputStream (java.base@11)
 178:             1             40  java.io.FilePermission (java.base@11)
 179:             1             40  java.lang.ArithmeticException (java.base@11)
 180:             1             40  java.lang.NullPointerException (java.base@11)
 181:             1             40  java.lang.Package$VersionInfo (java.base@11)
 182:             1             40  java.lang.invoke.DirectMethodHandle$Accessor (java.base@11)
 183:             1             40  java.lang.invoke.DirectMethodHandle$Interface (java.base@11)
 184:             1             40  java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle (java.base@11)
 185:             1             40  jdk.internal.ref.CleanerImpl$CleanerCleanable (java.base@11)
 186:             1             32  [Ljava.lang.OutOfMemoryError; (java.base@11)
 187:             2             32  [Ljava.lang.StackTraceElement; (java.base@11)
 188:             1             32  [Ljava.lang.ThreadGroup; (java.base@11)
 189:             2             32  [Ljava.lang.annotation.Annotation; (java.base@11)
 190:             1             32  [Ljava.lang.module.ModuleDescriptor$Modifier; (java.base@11)
 191:             1             32  [Ljava.lang.module.ModuleDescriptor$Requires$Modifier; (java.base@11)
 192:             1             32  [Ljava.util.stream.StreamShape; (java.base@11)
 193:             1             32  [Ljdk.internal.module.IllegalAccessLogger$Mode; (java.base@11)
 194:             2             32  com.intellij.rt.debugger.agent.CaptureAgent$ParamKeyProvider
 195:             1             32  java.io.File (java.base@11)
 196:             1             32  java.io.UnixFileSystem (java.base@11)
 197:             2             32  java.lang.Boolean (java.base@11)
 198:             1             32  java.lang.Package (java.base@11)
 199:             1             32  java.lang.module.ModuleDescriptor$Version (java.base@11)
 200:             2             32  java.nio.ByteOrder (java.base@11)
 201:             1             32  java.security.BasicPermissionCollection (java.base@11)
 202:             1             32  java.security.Permissions (java.base@11)
 203:             2             32  java.util.HashMap$Values (java.base@11)
 204:             2             32  jdk.internal.loader.ClassLoaderValue (java.base@11)
 205:             1             32  jdk.internal.module.IllegalAccessLogger (java.base@11)
 206:             2             32  jdk.internal.module.ServicesCatalog (java.base@11)
 207:             1             32  jdk.internal.ref.CleanerImpl (java.base@11)
 208:             1             32  sun.instrument.InstrumentationImpl (java.instrument@11)
 209:             1             32  sun.nio.cs.StandardCharsets (java.base@11)
 210:             1             32  sun.nio.fs.MacOSXFileSystem (java.base@11)
 211:             1             24  [Ljava.io.File$PathStatus; (java.base@11)
 212:             1             24  [Ljava.security.ProtectionDomain; (java.base@11)
 213:             1             24  com.intellij.rt.debugger.agent.CaptureAgent$FieldKeyProvider
 214:             1             24  java.io.FilePermissionCollection (java.base@11)
 215:             1             24  java.lang.Double (java.base@11)
 216:             1             24  java.lang.RuntimePermission (java.base@11)
 217:             1             24  java.lang.StringBuilder (java.base@11)
 218:             1             24  java.lang.StringCoding$Result (java.base@11)
 219:             1             24  java.lang.ThreadLocal$ThreadLocalMap (java.base@11)
 220:             1             24  java.lang.invoke.MethodType$ConcurrentWeakInternSet (java.base@11)
 221:             1             24  java.lang.reflect.ReflectPermission (java.base@11)
 222:             1             24  java.util.Collections$EmptyMap (java.base@11)
 223:             1             24  java.util.Collections$SetFromMap (java.base@11)
 224:             1             24  java.util.Collections$UnmodifiableRandomAccessList (java.base@11)
 225:             1             24  java.util.Locale$Cache (java.base@11)
 226:             1             24  jdk.internal.loader.URLClassPath$FileLoader (java.base@11)
 227:             1             24  jdk.internal.module.ModuleBootstrap$SafeModuleFinder (java.base@11)
 228:             1             24  jdk.internal.module.ModuleHashes (java.base@11)
 229:             1             24  sun.instrument.TransformerManager$TransformerInfo (java.instrument@11)
 230:             1             24  sun.nio.cs.ISO_8859_1 (java.base@11)
 231:             1             24  sun.nio.cs.US_ASCII (java.base@11)
 232:             1             24  sun.nio.cs.UTF_8 (java.base@11)
 233:             1             24  sun.util.locale.BaseLocale$Cache (java.base@11)
 234:             1             16  [D (java.base@11)
 235:             1             16  [F (java.base@11)
 236:             1             16  [Ljava.lang.Throwable; (java.base@11)
 237:             1             16  [Ljava.security.cert.Certificate; (java.base@11)
 238:             1             16  [Z (java.base@11)
 239:             1             16  com.intellij.rt.debugger.agent.CaptureAgent$1
 240:             1             16  com.intellij.rt.debugger.agent.CaptureAgent$CaptureTransformer
 241:             1             16  com.intellij.rt.debugger.agent.CaptureStorage$1
 242:             1             16  java.io.FileDescriptor$1 (java.base@11)
 243:             1             16  java.io.FilePermission$1 (java.base@11)
 244:             1             16  java.lang.CharacterDataLatin1 (java.base@11)
 245:             1             16  java.lang.Float (java.base@11)
 246:             1             16  java.lang.Runtime (java.base@11)
 247:             1             16  java.lang.String$CaseInsensitiveComparator (java.base@11)
 248:             1             16  java.lang.StringCoding$1 (java.base@11)
 249:             1             16  java.lang.System$2 (java.base@11)
 250:             1             16  java.lang.Terminator$1 (java.base@11)
 251:             1             16  java.lang.invoke.ClassSpecializer$1 (java.base@11)
 252:             1             16  java.lang.invoke.MemberName$Factory (java.base@11)
 253:             1             16  java.lang.invoke.MethodHandleImpl$1 (java.base@11)
 254:             1             16  java.lang.module.ModuleDescriptor$1 (java.base@11)
 255:             1             16  java.lang.ref.Cleaner (java.base@11)
 256:             1             16  java.lang.ref.Cleaner$1 (java.base@11)
 257:             1             16  java.lang.ref.Reference$1 (java.base@11)
 258:             1             16  java.lang.reflect.ReflectAccess (java.base@11)
 259:             1             16  java.net.URI$1 (java.base@11)
 260:             1             16  java.net.URL$3 (java.base@11)
 261:             1             16  java.net.URL$DefaultFactory (java.base@11)
 262:             1             16  java.nio.Buffer$1 (java.base@11)
 263:             1             16  java.security.ProtectionDomain$JavaSecurityAccessImpl (java.base@11)
 264:             1             16  java.security.SecureClassLoader$CodeSourceKey (java.base@11)
 265:             1             16  java.util.Collections$EmptyList (java.base@11)
 266:             1             16  java.util.Collections$EmptySet (java.base@11)
 267:             1             16  java.util.EnumMap$1 (java.base@11)
 268:             1             16  java.util.HashMap$EntrySet (java.base@11)
 269:             1             16  java.util.Optional (java.base@11)
 270:             1             16  java.util.Spliterators$EmptySpliterator$OfDouble (java.base@11)
 271:             1             16  java.util.Spliterators$EmptySpliterator$OfInt (java.base@11)
 272:             1             16  java.util.Spliterators$EmptySpliterator$OfLong (java.base@11)
 273:             1             16  java.util.Spliterators$EmptySpliterator$OfRef (java.base@11)
 274:             1             16  java.util.WeakHashMap$KeySet (java.base@11)
 275:             1             16  java.util.concurrent.ConcurrentHashMap$EntrySetView (java.base@11)
 276:             1             16  java.util.concurrent.ConcurrentHashMap$ValuesView (java.base@11)
 277:             1             16  java.util.stream.Collectors$$Lambda$5/0x0000000800061440 (java.base@11)
 278:             1             16  java.util.stream.Collectors$$Lambda$6/0x0000000800061840 (java.base@11)
 279:             1             16  java.util.stream.Collectors$$Lambda$7/0x0000000800061c40 (java.base@11)
 280:             1             16  java.util.stream.Collectors$$Lambda$8/0x0000000800062040 (java.base@11)
 281:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$10/0x0000000800062840 (java.base@11)
 282:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$11/0x0000000800062c40 (java.base@11)
 283:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$12/0x0000000800063040 (java.base@11)
 284:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$13/0x0000000800063440 (java.base@11)
 285:             1             16  jdk.internal.misc.Unsafe (java.base@11)
 286:             1             16  jdk.internal.module.DefaultRoots$$Lambda$1/0x0000000800060040 (java.base@11)
 287:             1             16  jdk.internal.module.DefaultRoots$$Lambda$2/0x0000000800060840 (java.base@11)
 288:             1             16  jdk.internal.module.DefaultRoots$$Lambda$4/0x0000000800061040 (java.base@11)
 289:             1             16  jdk.internal.module.DefaultRoots$$Lambda$9/0x0000000800062440 (java.base@11)
 290:             1             16  jdk.internal.module.ModulePatcher (java.base@11)
 291:             1             16  jdk.internal.module.ModuleTarget (java.base@11)
 292:             1             16  jdk.internal.reflect.ReflectionFactory (java.base@11)
 293:             1             16  sun.net.www.protocol.file.Handler (java.base@11)
 294:             1             16  sun.net.www.protocol.jrt.Handler (java.base@11)
 295:             1             16  sun.nio.fs.MacOSXFileSystemProvider (java.base@11)
 296:             1             16  sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar (java.base@11)
Total      15328715      426563664
